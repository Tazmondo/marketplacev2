local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Base36 = require(script.Parent.Base36)
local TableUtil = require(ReplicatedStorage.Packages.TableUtil)
local categoryCodes: { [string]: { string } } = {
	["Unique Shops"] = {
		"9",
		"C",
		"O",
		"U",
		"10",
		"14",
		"18",
		"1C",
		"1I",
		"1J",
		"1L",
		"1M",
		"1O",
		"1Q",
		"1R",
		"1V",
		"1W",
		"20",
		"21",
		"22",
		"23",
		"26",
		"28",
		"2B",
		"2C",
		"2F",
		"2I",
		"2J",
		"2K",
		"2M",
		"2P",
		"2S",
		"2V",
		"2W",
		"2Y",
		"2Z",
		"30",
		"33",
		"34",
		"35",
		"37",
		"3B",
		"3D",
		"3F",
		"3G",
		"3H",
		"3J",
		"3K",
		"3L",
	},

	["Editor's Picks"] = {
		"L",
		"Q",
		"13",
		"17",
		"18",
		"1A",
		"1K",
		"1N",
		"1P",
		"1Q",
		"1T",
		"1X",
		"24",
		"29",
		"2B",
		"2C",
		"2G",
		"2H",
		"2P",
		"2Q",
		"2S",
		"2T",
		"2X",
		"2Y",
		"30",
		"31",
		"32",
		"33",
		"35",
		"37",
		"3A",
		"3E",
		"3G",
		"3J",
		"30",
		"3Y",
	},

	["Girls Shops"] = {
		"A",
		"D",
		"E",
		"2",
		"F",
		"G",
		"H",
		"I",
		"K",
		"N",
		"P",
		"Q",
		"S",
		"Y",
		"Z",
		"11",
		"12",
		"13",
		"15",
		"16",
		"18",
		"1A",
		"1D",
		"1F",
		"1H",
		"1M",
		"1N",
		"1T",
		"1Y",
		"29",
		"2E",
		"2G",
		"2H",
		"2N",
		"2X",
		"30",
		"31",
		"33",
		"38",
		"3A",
		"3C",
		"3E",
		"3N",
		"3T",
	},

	["Boys Shops"] = {
		"B",
		"L",
		"T",
		"X",
		"1K",
		"1O",
		"1Q",
		"1U",
		"1X",
		"24",
		"27",
		"2A",
		"2B",
		"2D",
		"2F",
		"2L",
		"2Q",
		"2W",
		"3E",
		"3G",
		"3S",
		"3Y",
	},

	["Accessory Shops"] = {
		"7",
		"V",
		"1A",
		"1F",
		"1M",
		"1S",
		"1U",
		"1V",
		"26",
		"2B",
		"2C",
		"2F",
		"2H",
		"2J",
		"2P",
		"2Y",
		"30",
		"34",
		"39",
		"3A",
		"3G",
		"3L",
		"3Q",
	},

	["Themed Shops"] = {
		"8",
		"M",
		"R",
		"1V",
		"2J",
		"2K",
		"2N",
		"2O",
		"2P",
		"2R",
		"2S",
		"2V",
		"2W",
		"2Y",
		"2Z",
		"32",
		"33",
		"34",
		"35",
		"36",
		"37",
		"3B",
		"3F",
		"3G",
		"3H",
		"3L",
		"3M",
		"30",
		"3P",
		"3R",
		"3U",
		"3V",
		"3W",
		"3X",
	},

	["Hair Shops"] = { "G", "H", "1P", "1S", "25", "2H", "2T", "2U", "3B" },

	["Affordable Shops"] = { "J", "1G", "23" },

	["Sweater Shops"] = { "W" },

	["Anime Shops"] = { "X", "1B" },

	["Shoe Shops"] = { "11", "17", "3I" },
}

local numberCategories = {}
for category, codes in categoryCodes do
	numberCategories[category] = TableUtil.Map(codes, Base36.Decode)
end

local categoryOrder = {
	"Editor's Picks",
	"Unique Shops",
	"Girls Shops",
	"Boys Shops",
	"Accessory Shops",
	"Themed Shops",
	"Hair Shops",
	"Affordable Shops",
	"Sweater Shops",
	"Anime Shops",
	"Shoe Shops",
}
for _, category in categoryOrder do
	assert(numberCategories[category] ~= nil, `{category} data not found when initializing discover picks.`)
end
for category, _ in numberCategories do
	assert(table.find(categoryOrder, category), `{category} had data but was not listed in the order.`)
end

return {
	order = categoryOrder,
	codes = numberCategories,
}
